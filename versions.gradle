/**
 * 工程版本号管理
 */

ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = "3.1.3"
versions.kotlin = '1.2.51'
versions.bintray_release = '0.8.1'

versions.support = "27.1.1"

versions.dagger = "2.16"

versions.arouter_api = "1.3.1"
versions.arouter_compiler = "1.1.4"

versions.arch_core = "1.1.1"
versions.room = "1.1.1"
versions.lifecycle = "1.1.1"

versions.butterknife = "8.4.0"

versions.eventbus = "3.1.1"

versions.retrofit2 = "2.4.0"
versions.okhttp = "3.10.0"
versions.okhttp_logging_interceptor = "3.10.0"
versions.gson = "2.8.5"

versions.fresco = "1.10.0"

versions.constraint_layout = "1.1.2"
versions.smartrefresh = "1.1.0-alpha-14"
versions.MagicIndicator = "1.5.0"
versions.AutoScrollViewPager = "v1.0.2"
versions.badgeview = "1.1.3"
versions.fillblankview = "2.1@aar"
versions.vlayout = "1.2.16@aar"
versions.flowlayout = "1.1.2"
versions.pickerView = "3.2.7"
versions.ExpandableTextView = "1.0.3"
versions.universalAdapter = "1.0.6"
versions.socialization = "1.0.12"

versions.auto_value = "1.6"

versions.stetho = "1.5.0"
versions.leakcanary = "1.6.1"
versions.timber = "4.7.1"


versions.rxjava2 = "2.2.0"
versions.rx_android = "2.0.2"


versions.junit = "4.12"
versions.espresso = "3.0.1"
versions.mockwebserver = "3.8.1"
versions.apache_commons = "2.5"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.dexmaker = "2.2.0"
versions.glide = "3.8.0"
versions.atsl_runner = "1.0.1"
versions.atsl_rules = "1.0.1"
versions.hamcrest = "1.3"
versions.paging = "1.0.0-beta1"
def deps = [:]

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.butterknife_gradle_plugin = "com.jakewharton:butterknife-gradle-plugin:$versions.butterknife"
deps.kotlin_gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin_stdlib_jdk7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
deps.kotlin_stdlib_jdk8 = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
deps.bintray_release = "com.novoda:bintray-release:$versions.bintray_release"


def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = "com.android.support:appcompat-v7:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
deps.support = support

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
deps.lifecycle = lifecycle

def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def arouter = [:]
arouter.api = "com.alibaba:arouter-api:$versions.arouter_api"
arouter.compiler = "com.alibaba:arouter-compiler:$versions.arouter_compiler"
deps.arouter = arouter

def retrofit2 = [:]
retrofit2.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit2"
retrofit2.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit2"
retrofit2.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit2"
retrofit2.adapter_rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit2"
deps.retrofit2 = retrofit2
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging_interceptor"
deps.gson = "com.google.code.gson:gson:$versions.gson"

def fresco = [:]
fresco.fresco = "com.facebook.fresco:fresco:$versions.fresco"
fresco.animated_gif = "com.facebook.fresco:animated-gif:$versions.fresco"
fresco.animated_webp = "com.facebook.fresco:animated-webp:$versions.fresco"
fresco.webpsupport = "com.facebook.fresco:webpsupport:$versions.fresco"
fresco.imagepipeline_okhttp3 = "com.facebook.fresco:imagepipeline-okhttp3:$versions.fresco"
deps.fresco = fresco

def butterknife = [:]
butterknife.runtime = "com.jakewharton:butterknife:$versions.butterknife"
butterknife.compiler = "com.jakewharton:butterknife-compiler:$versions.butterknife"
deps.butterknife = butterknife

deps.eventbus = "org.greenrobot:eventbus:$versions.eventbus"
deps.rxandroid = "io.reactivex.rxjava2:rxandroid:2.0.2"

def smartrefresh = [:]
smartrefresh.SmartRefreshLayout = "com.scwang.smartrefresh:SmartRefreshLayout:$versions.smartrefresh"
smartrefresh.SmartRefreshHeader = "com.scwang.smartrefresh:SmartRefreshHeader:$versions.smartrefresh"
deps.smartrefresh = smartrefresh

def autoValue = [:]
autoValue.auto_value_annotations = "com.google.auto.value:auto-value-annotations:$versions.auto_value"
autoValue.auto_value_compile = "com.google.auto.value:auto-value:$versions.auto_value"
deps.autoValue = autoValue

def stetho = [:]
stetho.stetho = "com.facebook.stetho:stetho:$versions.stetho"
stetho.stetho_okhttp3 = "com.facebook.stetho:stetho-okhttp3:$versions.stetho"
stetho.stetho_urlconnection = "com.facebook.stetho:stetho-urlconnection:$versions.stetho"
deps.stetho = stetho

def leakcanary = [:]
leakcanary.leakcanary_android = "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
leakcanary.leakcanary_android_no_op = "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"
deps.leakcanary = leakcanary

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
deps.mockito = mockito

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jre7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

deps.socialization = "com.llj.socialization:lib-socialization:$versions.socialization"
deps.universalAdapter = "com.llj.adapter:lib-universalAdapter:$versions.universalAdapter"
deps.ExpandableTextView = "cn.carbs.android:ExpandableTextView:$versions.ExpandableTextView"
deps.pickerView = "com.contrarywind:Android-PickerView:$versions.pickerView"
deps.flowlayout = "com.hyman:flowlayout-lib:$versions.flowlayout"
deps.vlayout = "com.alibaba.android:vlayout:$versions.vlayout"
deps.fillblankview = "com.xw.repo:fillblankview:$versions.fillblankview"
deps.badgeview = "q.rorbin:badgeview:$versions.badgeview"
deps.AutoScrollViewPager = "com.github.demoNo:AutoScrollViewPager:$versions.AutoScrollViewPager"
deps.MagicIndicator = "com.github.hackware1993:MagicIndicator:$versions.magicIndicator"
deps.paging = "android.arch.paging:runtime:$versions.paging"
deps.glide = "com.github.bumptech.glide:glide:$versions.glide"
deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"

ext.deps = deps

def build_versions = [:]
build_versions.compile = 27
build_versions.build_tools = "27.0.3"
build_versions.min_sdk = 15
build_versions.target_sdk = 27
build_versions.version_code = 100
build_versions.version_name = "1.0.0"
build_versions.compile_jdk = 1.8
ext.build_versions = build_versions


def addRepos(RepositoryHandler handler) {
    handler.maven { url uri('./repo') }
    handler.flatDir { dirs '../lib', '../libs' }
    handler.mavenLocal()
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url "https://jitpack.io" }
}

ext.addRepos = this.&addRepos

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT+:08:00"))
}

ext.releaseTime = this.&releaseTime
