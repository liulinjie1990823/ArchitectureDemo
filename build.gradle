// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    apply from: 'versions.gradle'
    addRepos(repositories)
    dependencies {
        //
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
        //android插件
        classpath deps.android_gradle_plugin
        //kotlin插件
        classpath deps.kotlin_gradle_plugin
        //butterknife插件
        classpath deps.butterknife_gradle_plugin
        //渠道包插件
        classpath 'com.meituan.android.walle:plugin:1.1.6'
        //上传bintray插件
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'

        //classpath 'com.llj:time-gradle-plugin:0.0.1'
    }
}

allprojects {
    addRepos(repositories)
}

//配置类库相关属性
apply from: "libraryConfigure.gradle"

afterEvaluate {

    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--set-max-idx-number=48000'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        kotlinOptions.suppressWarnings = true
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}




gradle.beforeProject { project ->
    println "lifecycle beforeProject of $project"
}
gradle.afterProject { project, projectState ->
    println "lifecycle afterProject of $project"
}
gradle.projectsLoaded { project ->
    println "lifecycle projectsLoaded of $project"
}
gradle.settingsEvaluated {
    println 'lifecycle settingsEvaluated'
}
gradle.buildStarted {
    println 'lifecycle buildStarted'
}
gradle.buildFinished {
    println 'lifecycle buildFinished'
}
gradle.projectsEvaluated { project ->
    println "lifecycle projectsEvaluated of $project"
}
