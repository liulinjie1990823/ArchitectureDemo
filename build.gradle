// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    apply from: 'configureVersions.gradle'
    apply from: 'utils.gradle'
    addRepos(repositories)
    dependencies {
        //方法数检测
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.4'
        //maven库更新检测
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        //android插件
        classpath deps.android_gradle_plugin
        //kotlin插件
        classpath deps.kotlin_gradle_plugin
        //butterknife插件
        classpath deps.butterknife_gradle_plugin
        //渠道包插件
        classpath 'com.meituan.android.walle:plugin:1.1.6'
        //上传bintray插件
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.billy.android:cc-register:1.0.6'

        classpath 'com.llj:plugin-tracker-inject:0.0.1'
    }
}

allprojects {
    addRepos(repositories)

    //强制使依赖版本
    configurations.all {
        resolutionStrategy {
            force 'com.squareup.okhttp3:okhttp:3.11.0'
            force 'com.google.code.gson:gson:2.8.5'
            force 'com.android.support:support-v4:28.0.0'
            force 'com.android.support:appcompat-v7:28.0.0'

            force 'com.android.support:support-fragment:28.0.0'
            force 'com.android.support:support-media-compat:28.0.0'
            force 'com.android.support:support-core-utils:28.0.0'
            force 'com.android.support:support-core-ui:28.0.0'
            force 'com.android.support:support-compat:28.0.0'
            force 'com.android.support:support-annotations:28.0.0'
        }
    }

    //过滤每个工程任务表中无用的任务
    gradle.taskGraph.whenReady { taskGraph ->

        taskGraph.allTasks.each { task ->

            if (task.name.contains("Test")
                    || task.name.contains("test")
                    || task.name.contains("mockableAndroidJar")
                    || task.name.contains("Lint")
                    || task.name.contains("lint")
                    || task.name.contains("Aidl")
                    || task.name.contains("aidl")
                    || task.name.contains("Ndk")
                    || task.name.contains("ndk")
            ) {
                task.enabled = false
            }
        }
    }
}
apply from: "init.gradle"
//配置library相关属性
apply from: "configureLibrary.gradle"
//配置module相关属性
apply from: "configureModule.gradle"

afterEvaluate {

    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--set-max-idx-number=48000'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        kotlinOptions.suppressWarnings = true
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//测试
//apply from: "test.gradle"
