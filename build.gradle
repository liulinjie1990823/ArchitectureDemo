// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    //设置ext属性
    apply from: rootProject.file('z_gradle/init.gradle')
    //依赖项
    apply from: rootProject.file('z_gradle/configVersions.gradle')
    //工具类
    apply from: rootProject.file('z_gradle/utils.gradle')


    addRepos(repositories)
    dependencies {
//        classpath 'com.github.7hens:android-x2j:1.4'

        //方法数检测
        if (usePluginDexcount) {
            classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:1.0.3'
        }
        //maven库更新检测
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.38.0'

        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.29.1-alpha'
        //android-plugin插件
        if (useNew) {
            classpath Deps.android_gradle_plugin_new
        } else {
            if (useOld) {
                classpath Deps.android_gradle_plugin_old
            } else {
                classpath Deps.android_gradle_plugin
            }
        }
        //kotlin插件
        classpath Deps.kotlin_gradle_plugin
        //渠道包插件
        classpath 'com.meituan.android.walle:plugin:1.1.7'
        //启动图标
        classpath 'com.akaita.android:easylauncher:1.3.1'
        //butterknife插件
        classpath Deps.butterknife_gradle_plugin
        //初始化
        classpath "cn.bingoogolapple:bga-appinit-plugin:1.0.7"
        //本地路由
        classpath "com.alibaba:arouter-register:1.0.2"
        //上传bintray插件
//        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
//        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        //组件化插件
//        classpath 'com.billy.android:cc-register:1.1.2'
        //上传apk插件
        if (usePluginApkUpload) {
            classpath 'com.llj:plugin-upload:0.0.15'
        }
        //aspectj插件
        if (usePluginAspectjx) {
            classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.8'
        }
        //asm代码注入插件
        if (usePluginCodeInject) {
            classpath 'com.llj:plugin-code-inject:0.0.1'
        }
        //arr打包上传jcenter插件
//        classpath "com.novoda:bintray-release:0.9.2"
        classpath "com.github.panpf.bintray-publish:bintray-publish:1.0.0"
        //okbuck编译
        if (usePluginOkbuck) {
            classpath 'com.uber:okbuck:0.51.2'
        }
        //保存页面字段
        //classpath "io.github.prototypez:save-state:0.2.3"
        //doraemonkit手机调试插件
        if (usePluginDoraemonkit) {
            classpath 'com.didichuxing.doraemonkit:doraemonkit-plugin:3.2.0'
        }
        //性能检测
        if (usePluginMatrix) {
            classpath("com.tencent.matrix:matrix-gradle-plugin:${MATRIX_VERSION}") { changing = true }
        }
        //方法耗时统计
        if (usePluginMethodTrace && buildTypeDebug) {
            classpath "gradle.plugin.cn.cxzheng.methodTracePlugin:tracemanplugin:1.0.4"
        }
        //帧统计
        if (usePluginAndroidDevMetrics) {
            classpath 'com.frogermcs.androiddevmetrics:androiddevmetrics-plugin:0.7'
        }
        //排除jar中某个类插件
//        classpath "com.github.nekocode:JarFilterPlugin:2.4"
//        classpath 'com.github.yanbober:android-build-filter-gradle-plugin:1.0.1'
        classpath 'coder.siy:exclude-dependencies-plugin:1.0.0'

        //detekt
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.15.0"


    }
}

allprojects {
    //设置所有工程的依赖仓库
    addRepos(repositories)

    //强制使依赖版本
    configurations.all {
        if (useReactNative) {
            //只有在这里全局才有效，不知道为啥
            exclude group: 'com.facebook.fbjni', module: 'fbjni'
        }
        resolutionStrategy {
            force Deps.okhttp
            force Deps.gson
            force Deps.fresco
            force Deps.utilcodex

            force 'androidx.legacy:legacy-support-core-utils:1.0.0'
            force 'androidx.legacy:legacy-support-core-ui:1.0.0'
            force 'androidx.legacy:legacy-support-v4:1.0.0'
            force Deps.androidx_annotations
            force Deps.androidx_core
            force Deps.androidx_core_ktx
            force Deps.androidx_arch_common
            force Deps.androidx_arch_runtime
            force Deps.androidx_appcompat
            force Deps.lifecycle_runtime
            force Deps.lifecycle_service
            force Deps.lifecycle_java8
            force Deps.lifecycle_viewmodel
            force Deps.lifecycle_viewmodel_savedstate
            force Deps.lifecycle_livedata
            force Deps.lifecycle_reactivestreams_ktx
            force Deps.androidx_activity
            force Deps.androidx_fragment
            force Deps.androidx_collection
            force Deps.constraint_layout
            force Deps.customview
            force Deps.recyclerview
            force Deps.viewpager
            force Deps.viewpager2
            force Deps.drawerlayout
            force Deps.transition
            force Deps.room_runtime
            force Deps.sqlite
        }
    }

    //过滤每个工程任务表中无用的任务
    gradle.taskGraph.whenReady { taskGraph ->
        taskGraph.allTasks.each { task ->
            if (task.name.contains("Test")
                    || task.name.contains("test")//测试相关
                    || task.name.contains("mockableAndroidJar")//测试相关
                    || task.name.contains("Lint")//lint检测
                    || task.name.contains("lint")
//                    || task.name.contains("Aidl")//编译Aidl文件
//                    || task.name.contains("aidl")
                    || task.name.contains("Ndk")//使用ndk编译c++代码
                    || task.name.contains("ndk")) {
                task.enabled = false
            }
        }
    }


    //略过Javadoc中的编码问题
    tasks.withType(Javadoc) {
        failOnError false
        excludes = ['**/*.kt']
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }
}

//配置library相关属性
apply from: rootProject.file('z_gradle/configLibrary.gradle')
//配置module相关属性
apply from: rootProject.file('z_gradle/configModule.gradle')


afterEvaluate {

//    tasks.matching {
//        it.name.startsWith('dex')
//    }.each { dx ->
//        if (dx.additionalParameters == null) {
//            dx.additionalParameters = []
//        }
//        dx.additionalParameters += '--set-max-idx-number=48000'
//    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        kotlinOptions.suppressWarnings = true
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

