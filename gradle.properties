# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true
# 该文件的配置会在跟项目的ext中和properties中，properties包括了ext和一些其他的属性
# 子工程的properties属性会继承根工程下的properties，但如果有重名，子工程会覆盖父工程的属性
# 增加 Gradle 的堆大小
org.gradle.jvmargs=-Xms1024m -Xmx8192m -XX:MaxPermSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
# 开启守护进程
org.gradle.daemon=true
# 开启并行编译
org.gradle.parallel=true
org.gradle.configureondemand=false
# gradle本身的缓存，比如会重用任务输出（比如FROM-CACHE），可以跨工作空间，也可以在远程设置缓存空间供大家使用缓存
# 默认目录是user/.gradle/caches/build-cache-1，没有命令行删除，需要手动删除
org.gradle.caching=true
##############################
# AGP构建缓存
#构建缓存可以存储 Android Plugin for Gradle 在构建您的项目时生成的特定输出（例如未打包的 AAR 和 pre-dexed 远程依赖项）
#开启后会缓存在{user name}/.android/build-cache目录下，工程中/build/intermediates/pre-dexed/debug目录的exploded-aar文件夹将不会产生
#可以使用android.buildCacheDir指定目录，但别指定在<project-root>/build/ 或 <project-root>/<module-root>/build/ 目录
#因为这些目录在clean的时候会删除这些目录，可以用命令行./gradlew cleanBuildCache清除
android.enableBuildCache=true
#android.buildCacheDir=buildCacheDir/
# Android Studio 3.0会在debug apk的manifest文件application标签里自动添加 android:testOnly="true"属性，
# 导致IDE中run跑出的apk在大部分手机上只能用adb install -t <apk>来安装，在oppo手机上甚至安装不了
android.injected.testOnly=false
#D8在Android Studio 3.1或之后的版本被作为默认的编译器，如果是使用java8编译的，无法设置为false
android.enableD8=true
android.enableD8.desugaring=true
#未来版本已经设置强制开启
#android.enableR8=true
#开启调试gradle模式
#org.gradle.debug=true
#./gradlew --no-daemon :app:clean :app:compileDebugKotlin -Dkotlin.daemon.jvm.options="-Xdebug,-Xrunjdwp:transport=dt_socket\,address=5005\,server=y\,suspend=y"
###############################
# 启用kotlin增量编译
kotlin.incremental=true
kotlin.incremental.java=true
kotlin.caching.enabled=true
#开启kotlin并行编译
kotlin.parallel.tasks.in.project=true
# 并行运行kapt1.2.60版本以上支持，将kapt的处理移到了gradle进程（不开启是在Kotlin编译进程，这样会导致无法debug插件）
kapt.use.worker.api=true
# 增量编译kapt，1.3.30版本以上支持
kapt.incremental.apt=true
# kapt avoiding 如果用kapt依赖的内容没有变化，会完全重用编译内容，省掉最上图中的:app:kaptGenerateStubsDebugKotlin的时间
kapt.include.compile.classpath=true
################################
okbuck.wrapper=true
#迁移androidx
android.useAndroidX=true
android.enableJetifier=true
##flipper
#FLIPPER_VERSION=0.28.0
##matrix
#MATRIX_VERSION=0.9.0
# 这里配置的属性将会赋值到每个project的ext属性中
test=10086
native_scheme=ciw
org.gradle.internal.publish.checksums.insecure=true