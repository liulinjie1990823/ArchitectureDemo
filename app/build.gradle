apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)

android {
    resourcePrefix "main_"

    sourceSets {
        //用文件夹来控制编译，可以提高编译速度
        def dirs = ['p_widget', 'p_mine', 'p_login']
        if (useReactNative) {
            //这样来控制编译文件夹的方式不会合并AndroidManifest，所有所有的activity需要全部写在主AndroidManifest中
            dirs.add('main_react_native')
        } else {
            dirs.add('p_app')
        }
//        dirs.add('p_app')
        main {
            //除了这里设置的dirs目录，还包括了默认的目录main，这些是所有buildType所共享的
            //可以使用sourceSets任务查看
            manifest.srcFile 'src/main/AndroidManifest.xml'
            dirs.each { dir ->
                java.srcDir("src/${dir}/main/java")
                res.srcDir("src/${dir}/main/res")
                assets.srcDirs("src/${dir}/main/assets")
            }
        }

        if (useFlutterSrc) {
            p_flutter {
                def dirs2 = ['p_flutter']
                //一个sourceSet下只能指定一个manifest文件，
                manifest.srcFile 'src/p_flutter/AndroidManifest.xml'
                dirs2.each { dir ->
                    java.srcDir("src/${dir}/java")
                    res.srcDir("src/${dir}/res")
                    assets.srcDir("src/${dir}/assets")
                }
            }
        }
    }

    flavorDimensions "free"

    productFlavors {
        if (useFlutterSrc) {
            p_flutter { dimension "free" }
        }

    }
}

project.ext.react = [
        enableHermes: true,  // clean and rebuild if changing
]
def enableHermes = project.ext.react.get("enableHermes", false);


dependencies {

    implementation Deps.badgeview
    implementation Deps.viewpager2

//    api project(':lib-jni-test')
    api project(':lib-opengl')
    api project(':lib-opencv')
    api project(':lib-kodo')

    if (useMaven) {
        api Deps.lib_record
    } else {
        api project(':lib-record')
    }


    if (useComponent) {
        addComponent 'app-login'
//        addComponent 'app-mine'
        addComponent 'app-setting'
    } else {
        api project(':app-login')
        api project(':app-mine')
        api project(':app-setting')
    }
    implementation 'com.github.Yuphee:RewardLayout:1.0.5.8'

    //svg
//    implementation 'com.pixplicity.sharp:library:1.1.3@aar'

    //    implementation 'com.llj.flutter.flutter_ui:flutter_release:1.0@aar'
    //    implementation 'com.llj.flutter.flutter_setting2:flutter_release:1.0@aar'
//    implementation 'com.llj.flutter.flutter_module:flutter_release:1.0@aar'


    implementation 'com.github.florent37:shapeofview:1.4.7'
    implementation 'com.arthenica:mobile-ffmpeg-full:4.3.2'
    implementation Deps.androidx_appcompat
    implementation Deps.androidx_fragment_ktx
    implementation Deps.constraint_layout


//    kapt "com.zhangyue.we:x2c-apt:1.1.2"
//    implementation 'com.zhangyue.we:x2c-lib:1.0.6'

    if (useReactNative) {
        implementation "com.facebook.react:react-native:+"
        if (enableHermes) {
            def hermesPath = "../node_modules/hermes-engine/android/";
            debugImplementation files(hermesPath + "hermes-debug.aar")
            betaImplementation files(hermesPath + "hermes-debug.aar")
            releaseImplementation files(hermesPath + "hermes-release.aar")
        } else {
            implementation "org.webkit:android-jsc:+"
        }
    }

}



