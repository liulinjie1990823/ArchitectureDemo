apply plugin: 'walle'
//apply plugin: 'task-time'

android {
    compileSdkVersion build_versions.compile
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.china.hunbohui"
//        applicationId "com.llj.architecturedemo"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        versionCode build_versions.version_code
        versionName build_versions.version_name

        resConfigs "en", "xxhdpi"

        ndk { abiFilters "armeabi" }

        dataBinding { enabled = true }

        manifestPlaceholders = [qq_id: "1103566659"]
    }
    signingConfigs {
        release {
            storeFile file("../itotemHunbohui.keystore")
            storePassword "itotem"
            keyAlias "itotemapp"
            keyPassword "itotem"
            v2SigningEnabled true
        }
    }
    flavorDimensions "free"

    productFlavors {
//        wm { dimension "free" }
//        mt { dimension "free" }
    }

    buildTypes {
        debug {}
//        beta {}
        release {

        }
    }
    buildTypes.all { type ->
        type.matchingFallbacks = ['debug']
        type.signingConfig = signingConfigs.release
        type.minifyEnabled = false
        type.proguardFiles = [getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro']
    }

    sourceSets {
        def dirs = ['p_app', 'p_widget']
        main {
            manifest.srcFile 'src/p_app/main/AndroidManifest.xml'
            dirs.each { dir ->
                java.srcDir("src/${dir}/main/java")
                res.srcDir("src/${dir}/main/res")
            }
        }
//        wm {
//            dirs.each { dir ->
//                java.srcDir("src/${dir}/wm/java")
//                res.srcDir("src/${dir}/wm/res")
//            }
//        }
//        mt {
//            dirs.each { dir ->
//                java.srcDir("src/${dir}/mt/java")
//                res.srcDir("src/${dir}/mt/res")
//            }
//        }
    }

    compileOptions {
        targetCompatibility build_versions.compile_jdk
        sourceCompatibility build_versions.compile_jdk
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "v${defaultConfig.versionName}_${variant.name}_${releaseTime()}.apk"
                outputFileName = fileName
            }
        }
    }
    //停用 PNG 处理
    aaptOptions {
        cruncherEnabled false
    }

    //DEX 构建特性
    dexOptions {
        preDexLibraries true
        maxProcessCount 8
        // Instead of setting the heap size for the DEX process, increase Gradle's
        // heap size to enable dex-in-process. To learm more, read the next section.
        // javaMaxHeapSize "2048m"
    }
}


walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}_${channel}_${flavorName}${buildType}_v${versionName}_${versionCode}-${buildTime}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}

//打包任务
apply from: "../zipChannel.gradle"







