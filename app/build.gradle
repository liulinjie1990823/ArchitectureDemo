if (useDexcount) {
    apply plugin: 'com.getkeepsafe.dexcount'
}
apply plugin: 'walle'

if (useAspectjx) {
    apply plugin: 'android-aspectjx'

    aspectjx {
        //AspectJX功能开关
        enabled true
    }
}

if (useCodeInject) {
    apply plugin: 'plugin-code-inject'

    codeInjectConfig {
        showHelp = true
        keepQuiet = false
        watchTimeConsume = false
        targetPackages = ['com.llj.architecturedemo.ui.fragment']
    }
}


android {
    compileSdkVersion build_versions.compileSdkVersion
    buildToolsVersion build_versions.buildToolsVersion
    defaultConfig {
        applicationId build_versions.applicationId
        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion
        multiDexEnabled true

        versionCode build_versions.versionCode
        versionName build_versions.versionName

        resConfigs "zh", "xxhdpi"

//        ndk { abiFilters "x86" }
        ndk { abiFilters "armeabi-v7a" }

        dataBinding { enabled = true }

        manifestPlaceholders = [qq_id: "1103566659"]
    }
    signingConfigs {
        release {
            storeFile file("../itotemHunbohui.keystore")
            storePassword "itotem"
            keyAlias "itotemapp"
            keyPassword "itotem"
        }
    }
    flavorDimensions "free"

    productFlavors {
//        wm { dimension "free" }
//        mt { dimension "free" }
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            shrinkResources false
            signingConfig signingConfigs.release
        }
        beta {
            minifyEnabled false
            useProguard false
            shrinkResources false
            signingConfig signingConfigs.release
        }
        release {
            debuggable false
            minifyEnabled true
            useProguard true
            shrinkResources true
            signingConfig signingConfigs.release
        }
    }
    buildTypes.all { type ->
        type.matchingFallbacks = ['debug']
        type.proguardFiles = [getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro']
    }

    sourceSets {
        def dirs = ['p_app', 'p_widget', 'p_loading', 'p_mine', 'p_login']
        main {
            manifest.srcFile 'src/p_app/main/AndroidManifest.xml'
            dirs.each { dir ->
                java.srcDir("src/${dir}/main/java")
                res.srcDir("src/${dir}/main/res")
                assets.srcDirs("src/${dir}/main/assets")
            }
        }
//        wm {
//            dirs.each { dir ->
//                java.srcDir("src/${dir}/wm/java")
//                res.srcDir("src/${dir}/wm/res")
//            }
//        }
//        mt {
//            dirs.each { dir ->
//                java.srcDir("src/${dir}/mt/java")
//                res.srcDir("src/${dir}/mt/res")
//            }
//        }

    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
        ignoreWarnings true
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (output.outputFile != null && outputFile.name.endsWith('.apk')) {
//                outputFileName = "v${variant.versionName}_${variant.name}_${releaseTime()}.apk"
                outputFileName = getApkName(variant.versionName, variant.name)
            }
        }
    }
    //停用 PNG 处理
    aaptOptions {
        cruncherEnabled false
    }

    //DEX 构建特性
    dexOptions {
        preDexLibraries true
        maxProcessCount 8
        // Instead of setting the heap size for the DEX process, increase Gradle's
        // heap size to enable dex-in-process. To learm more, read the next section.
        // javaMaxHeapSize "2048m"
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/androidx.core_core.version'
        exclude 'META-INF/androidx.versionedparcelable_versionedparcelable.version'
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    api project(':lib-jni-test')
    api project(':lib-opengl')
    api project(':lib-record')
    api project(':lib-kodo')
//    api project(':lib-player')
    implementation deps.multidex
    implementation deps.multidex_instrumentation
    implementation deps.badgeview

    if (useComponent) {
        addComponent 'app-login'
        addComponent 'app-mine'
        addComponent 'app-setting'
    } else {
        api project(':app-login')
        api project(':app-mine')
        api project(':app-setting')
    }

    if (useMaven) {
        kapt deps.component_compiler
    } else {
        kapt project(':lib-component-compiler')
        kapt project(':lib-jump-compiler')
    }

//    implementation (name:'in2magic_atlas', ext:'aar')
    implementation 'com.github.Yuphee:RewardLayout:1.0.5.8'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:crashreport:3.0.0'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'

}

walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = '${appName}_${channel}_${flavorName}${buildType}_v${versionName}_${versionCode}-${buildTime}.apk'
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")
}

//测试
//apply from: rootProject.file('gradle/test.gradle')
//打包任务
apply from: rootProject.file('gradle/zipChannel.gradle')


if (useApkUploadPlugin) {
    //使用插件
    apply plugin: 'com.llj.plugin.upload.apkUploadPlugin'

    upload {
        testDingDing = true
        dingTalkAccessToken = dingTalkDebugAccessToken
        gitLog = "git log --pretty=format:%cn--%cd--%s --date=local --after=\"yesterday\" --grep=fix"

        buildTypes {
            debug {
                pgyApiKey = pgyDebugApiKey
                pgyUserKey = pgyDebugUserKey
                pgyAppKey = pgyDebugAppKey
            }
            beta {
                pgyApiKey = pgyBetaApiKey
                pgyUserKey = pgyBetaUserKey
                pgyAppKey = pgyBetaAppKey
            }
            release {
                pgyApiKey = pgyReleaseApiKey
                pgyUserKey = pgyReleaseUserKey
                pgyAppKey = pgyReleaseAppKey
            }
        }
    }
}

apply from: rootProject.file('gradle/git.gradle')








