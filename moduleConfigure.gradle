/**
 * 工程类库共用相关配置
 */

subprojects {
    if (it.name == 'app'
            || it.name.startsWith('module-')
            || it.name.startsWith('component-')) {
        if (useComponent) {
            apply from: "../cc-settings.gradle"
        } else {
            if (it.name == 'app') {
                apply plugin: 'com.android.application'
            } else {
                apply plugin: 'com.android.library'
            }
        }
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        //android
        if (it.name != 'app') {
            android {
                compileSdkVersion build_versions.compile
                buildToolsVersion build_versions.build_tools

                defaultConfig {
                    minSdkVersion build_versions.min_sdk
                    targetSdkVersion build_versions.target_sdk
                }

                buildTypes {
                    debug {
                        minifyEnabled false
                        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                    }
                }
                buildTypes.all { type ->
                    type.matchingFallbacks = ['debug']
                    type.minifyEnabled = false
                    type.proguardFiles = [getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro']
                }
                compileOptions {
                    targetCompatibility build_versions.compile_jdk
                    sourceCompatibility build_versions.compile_jdk
                }
                lintOptions {
                    abortOnError false
                }
            }
        }

        if (it.name.startsWith('component-service')) {
            dependencies {
                implementation fileTree(dir: 'libs', include: ['*.jar'])
                api deps.arouter.api

                if (useMaven) {
                    api deps.base
                    api deps.imageLoader
                    api deps.imageSelect
                    api deps.net
                    api project(':lib-socialization')
                    api deps.statelayout
                    api deps.universalAdapter
                    api deps.utils
                    api project(':lib-webview')
                } else {
                    api project(':lib-base')
                    api project(':lib-image-loader')
                    api project(':lib-image-select')
                    api project(':lib-net')
                    api project(':lib-socialization')
                    api project(':lib-statelayout')
                    api project(':lib-universalAdapter')
                    api project(':lib-utils')
                    api project(':lib-webview')
                }

                api deps.fresco.fresco
                api deps.fresco.animated_gif
                api deps.fresco.animated_webp
                api deps.fresco.webpsupport
                api deps.fresco.imagepipeline_okhttp3

                //ui
                api deps.smartrefresh.SmartRefreshLayout
                api deps.MagicIndicator
                api deps.support.design
                api deps.support.recyclerview
                api deps.constraint_layout
            }
        } else if (it.name.startsWith('app') || it.name.startsWith('module-')) {
            dependencies {
                implementation fileTree(include: ['*.jar'], dir: 'libs')
                api project(':component-service')

                kapt deps.dagger.compiler
                kapt deps.dagger.android_support_compiler

                //lifecycle
                kapt deps.lifecycle.compiler
                //db
                kapt deps.room.compiler
                //butterknife
                kapt deps.butterknife.compiler
                //跳转路由
                kapt deps.arouter.compiler


            }

            if (it.name.startsWith('app')) {
                dependencies {
                    implementation deps.walle

                    if (useComponent) {
                        addComponent 'module-login'
                    } else {
                        api project(':module-login')
                    }

                }
            }

        }
    }
}
