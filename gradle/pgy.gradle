def debugFile = "${projectDir.absolutePath}/build/outputs/apk/debug/${getApkName(rootProject.ext.build_versions["versionName"],"debug")}"
def betaFile = "${projectDir.absolutePath}/build/outputs/apk/beta/${getApkName(rootProject.ext.build_versions["versionName"],"beta")}"
def releaseFile = "${projectDir.absolutePath}/build/outputs/apk/release/${getApkName(rootProject.ext.build_versions["versionName"],"release")}"

private def uploadPGY(String filePath, String apiKey) {
    println filePath
    def stdout = new ByteArrayOutputStream()
    exec {
        executable = 'curl'
        args = ['-F', "file=@${filePath}", '-F', "_api_key=${apiKey}", rootProject.ext.pgyUploadUrl]
        standardOutput = stdout
    }
    String output = stdout.toString()
    def parsedJson = new groovy.json.JsonSlurper().parseText(output)
    println parsedJson.data.buildQRCodeURL
    println "版本号：" + parsedJson.data.buildVersion
}

/**
 * 执行 “uploadDebugApk” 命令自动打测试服包，并上传到蒲公英
 */
task uploadDebugApk() {
    group = "publishPgy"
    doLast {
        uploadPGY(debugFile, rootProject.ext.pgyDebugApiKey)
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleDebug') {
        uploadDebugApk.dependsOn(task)
    }
}

/**
 * 执行 “uploadBetaApk” 命令自动打正式服包，并上传到蒲公英
 */
task uploadBetaApk() {
    group = "publishPgy"
    doLast {
        uploadPGY(betaFile, rootProject.ext.pgyBetaApiKey)
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleBeta') {
        uploadBetaApk.dependsOn(task)
    }
}

/**
 * 执行 “uploadReleaseApk” 命令自动打超管服包，并上传到蒲公英
 */
task uploadReleaseApk() {
    group = "publishPgy"
    doLast {
        uploadPGY(releaseFile, rootProject.ext.pgyReleaseApiKey)
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        uploadReleaseApk.dependsOn(task)
    }
}
