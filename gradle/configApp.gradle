/**
 * 工程类库共用相关配置
 */

subprojects {
    if (it.name == 'app'
            || it.name.startsWith('module-')
            || it.name.startsWith('app-')
    ) {

        if (it.name.startsWith('module-java')) {
            return
        }
        if (useComponent) {
            //使用组件
            if (it.name == 'app') {
                ext.mainApp = true
            } else {
//            ext.alwaysLib = true
            }
            apply from: rootProject.file('gradle/cc-settings-2.gradle')

        } else {
            //不使用组件
            if (it.name == 'app') {
                apply plugin: 'com.android.application'
            } else {
                apply plugin: 'com.android.library'
            }
        }
        //app和module都生成R2文件，因为module要使用R2，切换为application的时候不用替换R2为R
        apply plugin: 'com.jakewharton.butterknife'
        apply plugin: 'kotlin-android'
        apply plugin: 'kotlin-kapt'
        //保存页面字段
        //apply plugin: 'save.state'

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
                arg("loginOuterKey", "needLogin")
                arg("loginInnerKey", "needLogin")
                arg("serializer", "gson")
            }
        }
        boolean isApplication = it.pluginManager.hasPlugin("com.android.application")
        println("subproject:" + project.name + ",isApplication:" + isApplication)

        //除了app的其他module
        if (it.name != 'app') {
            android {
                compileSdkVersion build_versions.compileSdkVersion
                buildToolsVersion build_versions.buildToolsVersion

                defaultConfig {
                    if (isApplication) {
                        applicationId build_versions.applicationId
                    }
                    minSdkVersion build_versions.minSdkVersion
                    targetSdkVersion build_versions.targetSdkVersion

                    versionCode build_versions.versionCode
                    versionName build_versions.versionName

                    resConfigs "en", "xxhdpi"

                    ndk { abiFilters "armeabi-v7a" }

                    manifestPlaceholders = [qq_id: "1103566659"]
                }

                buildTypes {
                    debug {}
                    beta {}
                    release {}
                }
                buildTypes.all { type ->
                    type.matchingFallbacks = ['debug']
                    type.proguardFiles = [getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro']
                }
                compileOptions {
                    targetCompatibility build_versions.compileJdkVersion
                    sourceCompatibility build_versions.compileJdkVersion
                }
                lintOptions {
                    abortOnError false
                }
                packagingOptions {
                    exclude 'META-INF/proguard/androidx-annotations.pro'
                    exclude 'META-INF/androidx.core_core.version'
                    exclude 'META-INF/androidx.versionedparcelable_versionedparcelable.version'
                }
            }
        }

        dependencies {
            implementation fileTree(include: ['*.jar'], dir: 'libs')
            api project(':component-service')

            //implementation project(':flutter')
            //dagger
            kapt deps.dagger_compiler
            kapt deps.dagger_android_support_compiler

            //lifecycle
            kapt deps.lifecycle_compiler
            //db
            kapt deps.room_compiler
            //butterknife
            kapt deps.butterknife_compiler
            //跳转路由
            kapt deps.arouter_compiler
            //kapt "com.airbnb:deeplinkdispatch-processor:3.1.1"
        }
    }
}
