//限制在跟目录导入

println("Custome Configure taskTimeTracker.gradle")

class Clock {
    long startTimeInMs

    Clock() {
        this(System.currentTimeMillis())
    }

    Clock(long startTimeInMs) {
        this.startTimeInMs = startTimeInMs
    }

    long getTimeInMs() {
        return System.currentTimeMillis() - startTimeInMs
    }
}

class TimeListener implements TaskExecutionListener, BuildListener {
    private Clock clock
    private times = []

    void beforeExecute(Task task) {
        clock = new Clock()
    }

    void afterExecute(Task task, TaskState taskState) {
        def ms = clock.timeInMs
        times.add([ms, task.path])
        task.project.logger.warn "${task.path} spend ${ms}ms"
    }

    void buildFinished(BuildResult result) {
        times.sort { a, b ->
            return a[0] - b[0]
        }
        println "Task spend time:"
        for (time in times) {
            if (time[0] >= 50) {
                printf "%7sms  %s\n", time
            }
        }
    }

    void buildStarted(Gradle gradle) {}

    void projectsEvaluated(Gradle gradle) {}

    void projectsLoaded(Gradle gradle) {}

    void settingsEvaluated(Settings settings) {}
}

gradle.addListener(new TimeListener())