/**
 * 工程gradle相关工具
 */

//限制只能在跟目录导入
if (project.name != project.rootProject.name) {
    return
}

println("Custome Configure (utils.gradle)")

def getVersionNameAdvanced() {
    def xmlFile = project.file("AndroidManifest.xml")
    def rootManifest = new XmlSlurper().parse(xmlFile)
    return rootManifest['@android:versionName']
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("GMT+:08:00"))
}

def getApkName(String versionName, String variantName) {
    return "v${versionName}_${variantName}_${releaseTime()}.apk"
}


ext.debugFile = "${projectDir.absolutePath}/build/outputs/apk/debug/${getApkName(rootProject.ext.build_versions["versionName"], "debug")}"
ext.betaFile = "${projectDir.absolutePath}/build/outputs/apk/beta/${getApkName(rootProject.ext.build_versions["versionName"], "beta")}"
ext.releaseFile = "${projectDir.absolutePath}/build/outputs/apk/release/${getApkName(rootProject.ext.build_versions["versionName"], "release")}"

//println("debugFile:" + rootProject.ext.debugFile)
//println("betaFile:" + rootProject.ext.betaFile)
//println("releaseFile:" + rootProject.ext.releaseFile)

ext {
    releaseTime = this.&releaseTime
    getVersionNameAdvanced = this.&getVersionNameAdvanced
    getApkName = this.&getApkName
}

//同步android机代理任务
//task syncAndroidIp(type: Exec) {
//    description '设置android端ip代理'
//    group 'syncAndroidIp'
//    workingDir "$rootProject.projectDir/python"
//    commandLine './sync_android_ip.py'
//}