apply plugin: 'maven-publish'

// load properties
Properties localProperties = new Properties()
Properties properties = new Properties()

File localPropertiesFile = project.parent.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(localPropertiesFile.newDataInputStream())
} else {
    println("local.properties not found")
}

File projectPropertiesFile = project.file("project.properties")
if (projectPropertiesFile.exists()) {
    properties.load(projectPropertiesFile.newDataInputStream())
} else {
    println("project.properties not found")
}

// read properties
def projectUserOrg = properties.getProperty("project.userOrg")
def projectRepo = properties.getProperty("project.repo")

def projectGroupId = properties.getProperty("project.groupId")
def projectArtifactId = properties.getProperty("project.artifactId")
def projectVersionName = properties.getProperty("project.versionName")

def projectName = properties.getProperty("project.name")
def projectPackaging = properties.getProperty("project.packaging")
def projectDescription = properties.getProperty("project.description")
def webSiteUrl = properties.getProperty("project.webSiteUrl")
def issueUrl = properties.getProperty("project.issueTrackerUrl")
def vscUrl = properties.getProperty("project.vscUrl")
def projectLicense = properties.getProperty("project.license")

def developerId = properties.getProperty("developer.id")
def developerName = properties.getProperty("developer.name")
def developerEmail = properties.getProperty("developer.email")

def bintrayUser = localProperties.getProperty("bintray.user")
def bintrayApikey = localProperties.getProperty("bintray.apikey")

def javadocName = properties.getProperty("javadoc.name")


//定义文档task
if (project.getPlugins().hasPlugin('com.android.application') ||
        project.getPlugins().hasPlugin('com.android.library')) {
    //文档
    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.source
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
    //文档
    task javadocJar(type: Jar, dependsOn: androidJavadocs) {
        from androidJavadocs.destinationDir
        classifier = 'javadoc'
    }
    //源码
    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.source
        classifier = 'sources'
    }
} else {
    //文档
    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
        classifier = 'javadoc'
    }
    //源码
    task sourcesJar(type: Jar, dependsOn: classes) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }
}

//略过Javadoc中的编码问题
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            excludes = ['**/*.kt']
            options.addStringOption('Xdoclint:none', '-quiet')
            options.addStringOption('encoding', 'UTF-8')
            options.addStringOption('charSet', 'UTF-8')
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId = projectGroupId
            artifactId = projectArtifactId
            version = projectVersionName

            artifact javadocJar
            artifact sourcesJar

            pom {
                name = projectName
                packaging = projectPackaging
                description = projectDescription
                url = webSiteUrl

                scm {
                    connection = vscUrl
                    developerConnection = vscUrl
                    url = webSiteUrl
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = developerId
                        name = developerName
                        email = developerEmail
                    }
                }
            }
        }
    }

    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url = "../repo"
        }
    }
}

